@using Microsoft.AspNetCore.Authorization

@inject IAuthorizationService AuthorizationService

<AuthorizeView>
    <Authorized>
        <div class="md:mr-4">
            @if (!string.IsNullOrEmpty(displayName))
            {
                <span class="hidden sm:inline text-gray-50 text-sm font-medium md:mr-6">Hi, @displayName</span>
            }

            @if (isAdminByPolicy)
            {
                <span class="text-gray-300 text-sm font-medium md:mr-2">Admin Page</span>
            }

            @if (isUserByPolicy && !isAdminByPolicy)
            {
                <span class="md:mr-2">
                    <NavLink href="/account/orders" class="text-gray-300 hover:bg-blue-900 hover:text-white px-3 py-2 rounded-md text-sm font-medium">
                        Your Orders
                    </NavLink>
                </span>
            }

            <a href="logout" class="text-gray-300 hover:bg-blue-900 hover:text-white px-3 py-2 rounded-md text-sm font-medium">Log out</a>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="md:mr-4">
            <a href="login" class="text-gray-300 hover:bg-blue-900 hover:text-white px-3 py-2 rounded-md text-sm font-medium">Log In</a>
            <a href="register" class="text-gray-300 hover:bg-blue-900 hover:text-white px-3 py-2 rounded-md text-sm font-medium">Register</a>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private string displayName;
    bool isAdminByPolicy = false;
    bool isUserByPolicy = false;

    protected override async Task OnInitializedAsync()
    {
        await GetAuthorisationData();
    }

    private async Task GetAuthorisationData()
    {
        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            displayName = user?.Claims?.FirstOrDefault(c => c.Type == "given_name").Value;
        }

        if ((await AuthorizationService.AuthorizeAsync(user, "IsAdmin")).Succeeded)
        {
            isAdminByPolicy = true;
        }

        if ((await AuthorizationService.AuthorizeAsync(user, "IsUser")).Succeeded)
        {
            isUserByPolicy = true;
        }
    }
}
